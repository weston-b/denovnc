// Reference: https://www.cl.cam.ac.uk/~mgk25/ucs/keysymdef.h
// https://datatracker.ietf.org/doc/html/rfc6143#section-7.5.4
export enum Key {
  BackSpace = 0xff08,
  Tab = 0xff09,
  LeftTab = 0xfe20,
  ShiftTab = Key.LeftTab,
  Enter = 0xff0d,
  Return = 0xff0d,
  Escape = 0xff1b,
  Insert = 0xff63,
  Delete = 0xffff,
  Home = 0xff50,
  End = 0xff57,
  PageUp = 0xff55,
  PageDown = 0xff56,
  Left = 0xff51,
  LeftArrow = Key.Left,
  Up = 0xff52,
  UpArrow = Key.Up,
  Right = 0xff53,
  RightArrow = Key.Right,
  Down = 0xff54,
  DownArrow = Key.Down,
  F1 = 0xffbe,
  F2 = 0xffbf,
  F3 = 0xffc0,
  F4 = 0xffc1,
  F5 = 0xffc2,
  F6 = 0xffc3,
  F7 = 0xffc4,
  F8 = 0xffc5,
  F9 = 0xffc6,
  F10 = 0xffc7,
  F11 = 0xffc8,
  F12 = 0xffc9,
  F13 = 0xffca,
  F14 = 0xffcb,
  F15 = 0xffcc,
  F16 = 0xffcd,
  F17 = 0xffce,
  F18 = 0xffcf,
  F19 = 0xffd0,
  F20 = 0xffd1,
  F21 = 0xffd2,
  F22 = 0xffd3,
  F23 = 0xffd4,
  F24 = 0xffd5,
  F25 = 0xffd6,
  F26 = 0xffd7,
  F27 = 0xffd8,
  F28 = 0xffd9,
  F29 = 0xffda,
  F30 = 0xffdb,
  F31 = 0xffdc,
  F32 = 0xffdd,
  F33 = 0xffde,
  F34 = 0xffdf,
  F35 = 0xffe0,
  LeftShift = 0xffe1,
  RightShift = 0xffe2,
  Shift = Key.LeftShift,
  LeftControl = 0xffe3,
  RightControl = 0xffe4,
  Control = Key.LeftControl,
  LeftMeta = 0xffe7,
  RightMeta = 0xffe8,
  Meta = Key.LeftMeta,
  LeftAlt = 0xffe9,
  RightAlt = 0xffea,
  Alt = Key.LeftAlt,
  LeftSuper = 0xffeb,
  RightSuper = 0xffec,
  Super = Key.LeftSuper,
  LeftHyper = 0xffed,
  RightHyper = 0xffee,
  Hyper = Key.LeftHyper,
  ShiftLock = 0xffe6,
  CapsLock = 0xffe5,
  Pause = 0xff13,
  Space = 0xff80,
  Prior = 0xff9a,
  Next = 0xff9b,
  Begin = 0xff9d,
  Equal = 0xffbd,
  Multiply = 0xffaa,
  Add = 0xffab,
  Separator = 0xffac,
  Subtract = 0xffad,
  Decimal = 0xffae,
  Divide = 0xffaf,
  Select = 0xff60,
  Print = 0xff61,
  Execute = 0xff62,
  Undo = 0xff65,
  Redo = 0xff66,
  Menu = 0xff67,
  Find = 0xff68,
  Cancel = 0xff69,
  Help = 0xff6a,
  Break = 0xff6b,
  ModeSwitch = 0xff7e,
  ScriptSwitch = 0xff7e,
  NumLock = 0xff7f,
  Linefeed = 0xff0a,
  Clear = 0xff0b,
  ScrollLock = 0xff14,
  a = 0x0061,
  A = 0x0041,
  b = 0x0062,
  B = 0x0042,
  c = 0x0063,
  C = 0x0043,
  d = 0x0064,
  D = 0x0044,
  e = 0x0065,
  E = 0x0045,
  f = 0x0066,
  F = 0x0046,
  g = 0x0067,
  G = 0x0047,
  h = 0x0068,
  H = 0x0048,
  i = 0x0069,
  I = 0x0049,
  j = 0x006a,
  J = 0x004a,
  k = 0x006b,
  K = 0x004b,
  l = 0x006c,
  L = 0x004c,
  m = 0x006d,
  M = 0x004d,
  n = 0x006e,
  N = 0x004e,
  o = 0x006f,
  O = 0x004f,
  p = 0x0070,
  P = 0x0050,
  q = 0x0071,
  Q = 0x0051,
  r = 0x0072,
  R = 0x0052,
  s = 0x0073,
  S = 0x0053,
  t = 0x0074,
  T = 0x0054,
  u = 0x0075,
  U = 0x0055,
  v = 0x0076,
  V = 0x0056,
  w = 0x0077,
  W = 0x0057,
  x = 0x0078,
  X = 0x0058,
  y = 0x0079,
  Y = 0x0059,
  z = 0x007a,
  Z = 0x005a,
  Num0 = 0x0030,
  Num1 = 0x0031,
  Num2 = 0x0032,
  Num3 = 0x0033,
  Num4 = 0x0034,
  Num5 = 0x0035,
  Num6 = 0x0036,
  Num7 = 0x0037,
  Num8 = 0x0038,
  Num9 = 0x0039,
}

// WARNING: The shift key behaves strange.
// Notice how the following are interpreted on the server.
// The shift key is sent but seams to be ignored (tkx11vnc - Zorin OS 16.2).

// await client.key(Key.s, Key.Control);                // Ctrl + 's'
// await client.key(Key.s, Key.Control, Key.Shift);     // Ctrl + 's'
// await client.key(Key.S, Key.Control);                // Ctrl + Shift + 's'

// await client.key(Key.ShiftTab, Key.Control);         // Ctrl + Shift + Tab
// await client.key(Key.Tab, Key.Shift, Key.Control);   // Ctrl + Tab


// Sometimes meta doesn't behave as expected on linux - try using Key.Super or Key.Hyper.